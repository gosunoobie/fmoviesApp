{
  "version": 3,
  "sources": ["../../@glidejs/glide/dist/glide.esm.js"],
  "sourcesContent": ["/*!\n * Glide.js v3.6.0\n * (c) 2013-2022 Jędrzej Chałubek (https://github.com/jedrzejchalubek/)\n * Released under the MIT License.\n */\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = _getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nfunction _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get;\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = _superPropBase(target, property);\n\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    };\n  }\n\n  return _get.apply(this, arguments);\n}\n\nvar defaults = {\n  /**\n   * Type of the movement.\n   *\n   * Available types:\n   * `slider` - Rewinds slider to the start/end when it reaches the first or last slide.\n   * `carousel` - Changes slides without starting over when it reaches the first or last slide.\n   *\n   * @type {String}\n   */\n  type: 'slider',\n\n  /**\n   * Start at specific slide number defined with zero-based index.\n   *\n   * @type {Number}\n   */\n  startAt: 0,\n\n  /**\n   * A number of slides visible on the single viewport.\n   *\n   * @type {Number}\n   */\n  perView: 1,\n\n  /**\n   * Focus currently active slide at a specified position in the track.\n   *\n   * Available inputs:\n   * `center` - Current slide will be always focused at the center of a track.\n   * `0,1,2,3...` - Current slide will be focused on the specified zero-based index.\n   *\n   * @type {String|Number}\n   */\n  focusAt: 0,\n\n  /**\n   * A size of the gap added between slides.\n   *\n   * @type {Number}\n   */\n  gap: 10,\n\n  /**\n   * Change slides after a specified interval. Use `false` for turning off autoplay.\n   *\n   * @type {Number|Boolean}\n   */\n  autoplay: false,\n\n  /**\n   * Stop autoplay on mouseover event.\n   *\n   * @type {Boolean}\n   */\n  hoverpause: true,\n\n  /**\n   * Allow for changing slides with left and right keyboard arrows.\n   *\n   * @type {Boolean}\n   */\n  keyboard: true,\n\n  /**\n   * Stop running `perView` number of slides from the end. Use this\n   * option if you don't want to have an empty space after\n   * a slider. Works only with `slider` type and a\n   * non-centered `focusAt` setting.\n   *\n   * @type {Boolean}\n   */\n  bound: false,\n\n  /**\n   * Minimal swipe distance needed to change the slide. Use `false` for turning off a swiping.\n   *\n   * @type {Number|Boolean}\n   */\n  swipeThreshold: 80,\n\n  /**\n   * Minimal mouse drag distance needed to change the slide. Use `false` for turning off a dragging.\n   *\n   * @type {Number|Boolean}\n   */\n  dragThreshold: 120,\n\n  /**\n   * A number of slides moved on single swipe.\n   *\n   * Available types:\n   * `` - Moves slider by one slide per swipe\n   * `|` - Moves slider between views per swipe (number of slides defined in `perView` options)\n   *\n   * @type {String}\n   */\n  perSwipe: '',\n\n  /**\n   * Moving distance ratio of the slides on a swiping and dragging.\n   *\n   * @type {Number}\n   */\n  touchRatio: 0.5,\n\n  /**\n   * Angle required to activate slides moving on swiping or dragging.\n   *\n   * @type {Number}\n   */\n  touchAngle: 45,\n\n  /**\n   * Duration of the animation in milliseconds.\n   *\n   * @type {Number}\n   */\n  animationDuration: 400,\n\n  /**\n   * Allows looping the `slider` type. Slider will rewind to the first/last slide when it's at the start/end.\n   *\n   * @type {Boolean}\n   */\n  rewind: true,\n\n  /**\n   * Duration of the rewinding animation of the `slider` type in milliseconds.\n   *\n   * @type {Number}\n   */\n  rewindDuration: 800,\n\n  /**\n   * Easing function for the animation.\n   *\n   * @type {String}\n   */\n  animationTimingFunc: 'cubic-bezier(.165, .840, .440, 1)',\n\n  /**\n   * Wait for the animation to finish until the next user input can be processed\n   *\n   * @type {boolean}\n   */\n  waitForTransition: true,\n\n  /**\n   * Throttle costly events at most once per every wait milliseconds.\n   *\n   * @type {Number}\n   */\n  throttle: 10,\n\n  /**\n   * Moving direction mode.\n   *\n   * Available inputs:\n   * - 'ltr' - left to right movement,\n   * - 'rtl' - right to left movement.\n   *\n   * @type {String}\n   */\n  direction: 'ltr',\n\n  /**\n   * The distance value of the next and previous viewports which\n   * have to peek in the current view. Accepts number and\n   * pixels as a string. Left and right peeking can be\n   * set up separately with a directions object.\n   *\n   * For example:\n   * `100` - Peek 100px on the both sides.\n   * { before: 100, after: 50 }` - Peek 100px on the left side and 50px on the right side.\n   *\n   * @type {Number|String|Object}\n   */\n  peek: 0,\n\n  /**\n   * Defines how many clones of current viewport will be generated.\n   *\n   * @type {Number}\n   */\n  cloningRatio: 1,\n\n  /**\n   * Collection of options applied at specified media breakpoints.\n   * For example: display two slides per view under 800px.\n   * `{\n   *   '800px': {\n   *     perView: 2\n   *   }\n   * }`\n   */\n  breakpoints: {},\n\n  /**\n   * Collection of internally used HTML classes.\n   *\n   * @todo Refactor `slider` and `carousel` properties to single `type: { slider: '', carousel: '' }` object\n   * @type {Object}\n   */\n  classes: {\n    swipeable: 'glide--swipeable',\n    dragging: 'glide--dragging',\n    direction: {\n      ltr: 'glide--ltr',\n      rtl: 'glide--rtl'\n    },\n    type: {\n      slider: 'glide--slider',\n      carousel: 'glide--carousel'\n    },\n    slide: {\n      clone: 'glide__slide--clone',\n      active: 'glide__slide--active'\n    },\n    arrow: {\n      disabled: 'glide__arrow--disabled'\n    },\n    nav: {\n      active: 'glide__bullet--active'\n    }\n  }\n};\n\n/**\n * Outputs warning message to the bowser console.\n *\n * @param  {String} msg\n * @return {Void}\n */\nfunction warn(msg) {\n  console.error(\"[Glide warn]: \".concat(msg));\n}\n\n/**\n * Converts value entered as number\n * or string to integer value.\n *\n * @param {String} value\n * @returns {Number}\n */\nfunction toInt(value) {\n  return parseInt(value);\n}\n/**\n * Converts value entered as number\n * or string to flat value.\n *\n * @param {String} value\n * @returns {Number}\n */\n\nfunction toFloat(value) {\n  return parseFloat(value);\n}\n/**\n * Indicates whether the specified value is a string.\n *\n * @param  {*}   value\n * @return {Boolean}\n */\n\nfunction isString(value) {\n  return typeof value === 'string';\n}\n/**\n * Indicates whether the specified value is an object.\n *\n * @param  {*} value\n * @return {Boolean}\n *\n * @see https://github.com/jashkenas/underscore\n */\n\nfunction isObject(value) {\n  var type = _typeof(value);\n\n  return type === 'function' || type === 'object' && !!value; // eslint-disable-line no-mixed-operators\n}\n/**\n * Indicates whether the specified value is a function.\n *\n * @param  {*} value\n * @return {Boolean}\n */\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n/**\n * Indicates whether the specified value is undefined.\n *\n * @param  {*} value\n * @return {Boolean}\n */\n\nfunction isUndefined(value) {\n  return typeof value === 'undefined';\n}\n/**\n * Indicates whether the specified value is an array.\n *\n * @param  {*} value\n * @return {Boolean}\n */\n\nfunction isArray(value) {\n  return value.constructor === Array;\n}\n\n/**\n * Creates and initializes specified collection of extensions.\n * Each extension receives access to instance of glide and rest of components.\n *\n * @param {Object} glide\n * @param {Object} extensions\n *\n * @returns {Object}\n */\n\nfunction mount(glide, extensions, events) {\n  var components = {};\n\n  for (var name in extensions) {\n    if (isFunction(extensions[name])) {\n      components[name] = extensions[name](glide, components, events);\n    } else {\n      warn('Extension must be a function');\n    }\n  }\n\n  for (var _name in components) {\n    if (isFunction(components[_name].mount)) {\n      components[_name].mount();\n    }\n  }\n\n  return components;\n}\n\n/**\n * Defines getter and setter property on the specified object.\n *\n * @param  {Object} obj         Object where property has to be defined.\n * @param  {String} prop        Name of the defined property.\n * @param  {Object} definition  Get and set definitions for the property.\n * @return {Void}\n */\nfunction define(obj, prop, definition) {\n  Object.defineProperty(obj, prop, definition);\n}\n/**\n * Sorts aphabetically object keys.\n *\n * @param  {Object} obj\n * @return {Object}\n */\n\nfunction sortKeys(obj) {\n  return Object.keys(obj).sort().reduce(function (r, k) {\n    r[k] = obj[k];\n    return r[k], r;\n  }, {});\n}\n/**\n * Merges passed settings object with default options.\n *\n * @param  {Object} defaults\n * @param  {Object} settings\n * @return {Object}\n */\n\nfunction mergeOptions(defaults, settings) {\n  var options = Object.assign({}, defaults, settings); // `Object.assign` do not deeply merge objects, so we\n  // have to do it manually for every nested object\n  // in options. Although it does not look smart,\n  // it's smaller and faster than some fancy\n  // merging deep-merge algorithm script.\n\n  if (settings.hasOwnProperty('classes')) {\n    options.classes = Object.assign({}, defaults.classes, settings.classes);\n\n    if (settings.classes.hasOwnProperty('direction')) {\n      options.classes.direction = Object.assign({}, defaults.classes.direction, settings.classes.direction);\n    }\n\n    if (settings.classes.hasOwnProperty('type')) {\n      options.classes.type = Object.assign({}, defaults.classes.type, settings.classes.type);\n    }\n\n    if (settings.classes.hasOwnProperty('slide')) {\n      options.classes.slide = Object.assign({}, defaults.classes.slide, settings.classes.slide);\n    }\n\n    if (settings.classes.hasOwnProperty('arrow')) {\n      options.classes.arrow = Object.assign({}, defaults.classes.arrow, settings.classes.arrow);\n    }\n\n    if (settings.classes.hasOwnProperty('nav')) {\n      options.classes.nav = Object.assign({}, defaults.classes.nav, settings.classes.nav);\n    }\n  }\n\n  if (settings.hasOwnProperty('breakpoints')) {\n    options.breakpoints = Object.assign({}, defaults.breakpoints, settings.breakpoints);\n  }\n\n  return options;\n}\n\nvar EventsBus = /*#__PURE__*/function () {\n  /**\n   * Construct a EventBus instance.\n   *\n   * @param {Object} events\n   */\n  function EventsBus() {\n    var events = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, EventsBus);\n\n    this.events = events;\n    this.hop = events.hasOwnProperty;\n  }\n  /**\n   * Adds listener to the specifed event.\n   *\n   * @param {String|Array} event\n   * @param {Function} handler\n   */\n\n\n  _createClass(EventsBus, [{\n    key: \"on\",\n    value: function on(event, handler) {\n      if (isArray(event)) {\n        for (var i = 0; i < event.length; i++) {\n          this.on(event[i], handler);\n        }\n\n        return;\n      } // Create the event's object if not yet created\n\n\n      if (!this.hop.call(this.events, event)) {\n        this.events[event] = [];\n      } // Add the handler to queue\n\n\n      var index = this.events[event].push(handler) - 1; // Provide handle back for removal of event\n\n      return {\n        remove: function remove() {\n          delete this.events[event][index];\n        }\n      };\n    }\n    /**\n     * Runs registered handlers for specified event.\n     *\n     * @param {String|Array} event\n     * @param {Object=} context\n     */\n\n  }, {\n    key: \"emit\",\n    value: function emit(event, context) {\n      if (isArray(event)) {\n        for (var i = 0; i < event.length; i++) {\n          this.emit(event[i], context);\n        }\n\n        return;\n      } // If the event doesn't exist, or there's no handlers in queue, just leave\n\n\n      if (!this.hop.call(this.events, event)) {\n        return;\n      } // Cycle through events queue, fire!\n\n\n      this.events[event].forEach(function (item) {\n        item(context || {});\n      });\n    }\n  }]);\n\n  return EventsBus;\n}();\n\nvar Glide$1 = /*#__PURE__*/function () {\n  /**\r\n   * Construct glide.\r\n   *\r\n   * @param  {String} selector\r\n   * @param  {Object} options\r\n   */\n  function Glide(selector) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Glide);\n\n    this._c = {};\n    this._t = [];\n    this._e = new EventsBus();\n    this.disabled = false;\n    this.selector = selector;\n    this.settings = mergeOptions(defaults, options);\n    this.index = this.settings.startAt;\n  }\n  /**\r\n   * Initializes glide.\r\n   *\r\n   * @param {Object} extensions Collection of extensions to initialize.\r\n   * @return {Glide}\r\n   */\n\n\n  _createClass(Glide, [{\n    key: \"mount\",\n    value: function mount$1() {\n      var extensions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      this._e.emit('mount.before');\n\n      if (isObject(extensions)) {\n        this._c = mount(this, extensions, this._e);\n      } else {\n        warn('You need to provide a object on `mount()`');\n      }\n\n      this._e.emit('mount.after');\n\n      return this;\n    }\n    /**\r\n     * Collects an instance `translate` transformers.\r\n     *\r\n     * @param  {Array} transformers Collection of transformers.\r\n     * @return {Void}\r\n     */\n\n  }, {\n    key: \"mutate\",\n    value: function mutate() {\n      var transformers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n      if (isArray(transformers)) {\n        this._t = transformers;\n      } else {\n        warn('You need to provide a array on `mutate()`');\n      }\n\n      return this;\n    }\n    /**\r\n     * Updates glide with specified settings.\r\n     *\r\n     * @param {Object} settings\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"update\",\n    value: function update() {\n      var settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      this.settings = mergeOptions(this.settings, settings);\n\n      if (settings.hasOwnProperty('startAt')) {\n        this.index = settings.startAt;\n      }\n\n      this._e.emit('update');\n\n      return this;\n    }\n    /**\r\n     * Change slide with specified pattern. A pattern must be in the special format:\r\n     * `>` - Move one forward\r\n     * `<` - Move one backward\r\n     * `={i}` - Go to {i} zero-based slide (eq. '=1', will go to second slide)\r\n     * `>>` - Rewinds to end (last slide)\r\n     * `<<` - Rewinds to start (first slide)\r\n     * `|>` - Move one viewport forward\r\n     * `|<` - Move one viewport backward\r\n     *\r\n     * @param {String} pattern\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"go\",\n    value: function go(pattern) {\n      this._c.Run.make(pattern);\n\n      return this;\n    }\n    /**\r\n     * Move track by specified distance.\r\n     *\r\n     * @param {String} distance\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"move\",\n    value: function move(distance) {\n      this._c.Transition.disable();\n\n      this._c.Move.make(distance);\n\n      return this;\n    }\n    /**\r\n     * Destroy instance and revert all changes done by this._c.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this._e.emit('destroy');\n\n      return this;\n    }\n    /**\r\n     * Start instance autoplaying.\r\n     *\r\n     * @param {Boolean|Number} interval Run autoplaying with passed interval regardless of `autoplay` settings\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"play\",\n    value: function play() {\n      var interval = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (interval) {\n        this.settings.autoplay = interval;\n      }\n\n      this._e.emit('play');\n\n      return this;\n    }\n    /**\r\n     * Stop instance autoplaying.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"pause\",\n    value: function pause() {\n      this._e.emit('pause');\n\n      return this;\n    }\n    /**\r\n     * Sets glide into a idle status.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"disable\",\n    value: function disable() {\n      this.disabled = true;\n      return this;\n    }\n    /**\r\n     * Sets glide into a active status.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"enable\",\n    value: function enable() {\n      this.disabled = false;\n      return this;\n    }\n    /**\r\n     * Adds cuutom event listener with handler.\r\n     *\r\n     * @param  {String|Array} event\r\n     * @param  {Function} handler\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: \"on\",\n    value: function on(event, handler) {\n      this._e.on(event, handler);\n\n      return this;\n    }\n    /**\r\n     * Checks if glide is a precised type.\r\n     *\r\n     * @param  {String} name\r\n     * @return {Boolean}\r\n     */\n\n  }, {\n    key: \"isType\",\n    value: function isType(name) {\n      return this.settings.type === name;\n    }\n    /**\r\n     * Gets value of the core options.\r\n     *\r\n     * @return {Object}\r\n     */\n\n  }, {\n    key: \"settings\",\n    get: function get() {\n      return this._o;\n    }\n    /**\r\n     * Sets value of the core options.\r\n     *\r\n     * @param  {Object} o\r\n     * @return {Void}\r\n     */\n    ,\n    set: function set(o) {\n      if (isObject(o)) {\n        this._o = o;\n      } else {\n        warn('Options must be an `object` instance.');\n      }\n    }\n    /**\r\n     * Gets current index of the slider.\r\n     *\r\n     * @return {Object}\r\n     */\n\n  }, {\n    key: \"index\",\n    get: function get() {\n      return this._i;\n    }\n    /**\r\n     * Sets current index a slider.\r\n     *\r\n     * @return {Object}\r\n     */\n    ,\n    set: function set(i) {\n      this._i = toInt(i);\n    }\n    /**\r\n     * Gets type name of the slider.\r\n     *\r\n     * @return {String}\r\n     */\n\n  }, {\n    key: \"type\",\n    get: function get() {\n      return this.settings.type;\n    }\n    /**\r\n     * Gets value of the idle status.\r\n     *\r\n     * @return {Boolean}\r\n     */\n\n  }, {\n    key: \"disabled\",\n    get: function get() {\n      return this._d;\n    }\n    /**\r\n     * Sets value of the idle status.\r\n     *\r\n     * @return {Boolean}\r\n     */\n    ,\n    set: function set(status) {\n      this._d = !!status;\n    }\n  }]);\n\n  return Glide;\n}();\n\nfunction Run (Glide, Components, Events) {\n  var Run = {\n    /**\n     * Initializes autorunning of the glide.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this._o = false;\n    },\n\n    /**\n     * Makes glides running based on the passed moving schema.\n     *\n     * @param {String} move\n     */\n    make: function make(move) {\n      var _this = this;\n\n      if (!Glide.disabled) {\n        !Glide.settings.waitForTransition || Glide.disable();\n        this.move = move;\n        Events.emit('run.before', this.move);\n        this.calculate();\n        Events.emit('run', this.move);\n        Components.Transition.after(function () {\n          if (_this.isStart()) {\n            Events.emit('run.start', _this.move);\n          }\n\n          if (_this.isEnd()) {\n            Events.emit('run.end', _this.move);\n          }\n\n          if (_this.isOffset()) {\n            _this._o = false;\n            Events.emit('run.offset', _this.move);\n          }\n\n          Events.emit('run.after', _this.move);\n          Glide.enable();\n        });\n      }\n    },\n\n    /**\n     * Calculates current index based on defined move.\n     *\n     * @return {Number|Undefined}\n     */\n    calculate: function calculate() {\n      var move = this.move,\n          length = this.length;\n      var steps = move.steps,\n          direction = move.direction; // By default assume that size of view is equal to one slide\n\n      var viewSize = 1; // While direction is `=` we want jump to\n      // a specified index described in steps.\n\n      if (direction === '=') {\n        // Check if bound is true, \n        // as we want to avoid whitespaces.\n        if (Glide.settings.bound && toInt(steps) > length) {\n          Glide.index = length;\n          return;\n        }\n\n        Glide.index = steps;\n        return;\n      } // When pattern is equal to `>>` we want\n      // fast forward to the last slide.\n\n\n      if (direction === '>' && steps === '>') {\n        Glide.index = length;\n        return;\n      } // When pattern is equal to `<<` we want\n      // fast forward to the first slide.\n\n\n      if (direction === '<' && steps === '<') {\n        Glide.index = 0;\n        return;\n      } // pagination movement\n\n\n      if (direction === '|') {\n        viewSize = Glide.settings.perView || 1;\n      } // we are moving forward\n\n\n      if (direction === '>' || direction === '|' && steps === '>') {\n        var index = calculateForwardIndex(viewSize);\n\n        if (index > length) {\n          this._o = true;\n        }\n\n        Glide.index = normalizeForwardIndex(index, viewSize);\n        return;\n      } // we are moving backward\n\n\n      if (direction === '<' || direction === '|' && steps === '<') {\n        var _index = calculateBackwardIndex(viewSize);\n\n        if (_index < 0) {\n          this._o = true;\n        }\n\n        Glide.index = normalizeBackwardIndex(_index, viewSize);\n        return;\n      }\n\n      warn(\"Invalid direction pattern [\".concat(direction).concat(steps, \"] has been used\"));\n    },\n\n    /**\n     * Checks if we are on the first slide.\n     *\n     * @return {Boolean}\n     */\n    isStart: function isStart() {\n      return Glide.index <= 0;\n    },\n\n    /**\n     * Checks if we are on the last slide.\n     *\n     * @return {Boolean}\n     */\n    isEnd: function isEnd() {\n      return Glide.index >= this.length;\n    },\n\n    /**\n     * Checks if we are making a offset run.\n     *\n     * @param {String} direction\n     * @return {Boolean}\n     */\n    isOffset: function isOffset() {\n      var direction = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n\n      if (!direction) {\n        return this._o;\n      }\n\n      if (!this._o) {\n        return false;\n      } // did we view to the right?\n\n\n      if (direction === '|>') {\n        return this.move.direction === '|' && this.move.steps === '>';\n      } // did we view to the left?\n\n\n      if (direction === '|<') {\n        return this.move.direction === '|' && this.move.steps === '<';\n      }\n\n      return this.move.direction === direction;\n    },\n\n    /**\n     * Checks if bound mode is active\n     *\n     * @return {Boolean}\n     */\n    isBound: function isBound() {\n      return Glide.isType('slider') && Glide.settings.focusAt !== 'center' && Glide.settings.bound;\n    }\n  };\n  /**\n   * Returns index value to move forward/to the right\n   *\n   * @param viewSize\n   * @returns {Number}\n   */\n\n  function calculateForwardIndex(viewSize) {\n    var index = Glide.index;\n\n    if (Glide.isType('carousel')) {\n      return index + viewSize;\n    }\n\n    return index + (viewSize - index % viewSize);\n  }\n  /**\n   * Normalizes the given forward index based on glide settings, preventing it to exceed certain boundaries\n   *\n   * @param index\n   * @param length\n   * @param viewSize\n   * @returns {Number}\n   */\n\n\n  function normalizeForwardIndex(index, viewSize) {\n    var length = Run.length;\n\n    if (index <= length) {\n      return index;\n    }\n\n    if (Glide.isType('carousel')) {\n      return index - (length + 1);\n    }\n\n    if (Glide.settings.rewind) {\n      // bound does funny things with the length, therefor we have to be certain\n      // that we are on the last possible index value given by bound\n      if (Run.isBound() && !Run.isEnd()) {\n        return length;\n      }\n\n      return 0;\n    }\n\n    if (Run.isBound()) {\n      return length;\n    }\n\n    return Math.floor(length / viewSize) * viewSize;\n  }\n  /**\n   * Calculates index value to move backward/to the left\n   *\n   * @param viewSize\n   * @returns {Number}\n   */\n\n\n  function calculateBackwardIndex(viewSize) {\n    var index = Glide.index;\n\n    if (Glide.isType('carousel')) {\n      return index - viewSize;\n    } // ensure our back navigation results in the same index as a forward navigation\n    // to experience a homogeneous paging\n\n\n    var view = Math.ceil(index / viewSize);\n    return (view - 1) * viewSize;\n  }\n  /**\n   * Normalizes the given backward index based on glide settings, preventing it to exceed certain boundaries\n   *\n   * @param index\n   * @param length\n   * @param viewSize\n   * @returns {*}\n   */\n\n\n  function normalizeBackwardIndex(index, viewSize) {\n    var length = Run.length;\n\n    if (index >= 0) {\n      return index;\n    }\n\n    if (Glide.isType('carousel')) {\n      return index + (length + 1);\n    }\n\n    if (Glide.settings.rewind) {\n      // bound does funny things with the length, therefor we have to be certain\n      // that we are on first possible index value before we to rewind to the length given by bound\n      if (Run.isBound() && Run.isStart()) {\n        return length;\n      }\n\n      return Math.floor(length / viewSize) * viewSize;\n    }\n\n    return 0;\n  }\n\n  define(Run, 'move', {\n    /**\n     * Gets value of the move schema.\n     *\n     * @returns {Object}\n     */\n    get: function get() {\n      return this._m;\n    },\n\n    /**\n     * Sets value of the move schema.\n     *\n     * @returns {Object}\n     */\n    set: function set(value) {\n      var step = value.substr(1);\n      this._m = {\n        direction: value.substr(0, 1),\n        steps: step ? toInt(step) ? toInt(step) : step : 0\n      };\n    }\n  });\n  define(Run, 'length', {\n    /**\n     * Gets value of the running distance based\n     * on zero-indexing number of slides.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var settings = Glide.settings;\n      var length = Components.Html.slides.length; // If the `bound` option is active, a maximum running distance should be\n      // reduced by `perView` and `focusAt` settings. Running distance\n      // should end before creating an empty space after instance.\n\n      if (this.isBound()) {\n        return length - 1 - (toInt(settings.perView) - 1) + toInt(settings.focusAt);\n      }\n\n      return length - 1;\n    }\n  });\n  define(Run, 'offset', {\n    /**\n     * Gets status of the offsetting flag.\n     *\n     * @return {Boolean}\n     */\n    get: function get() {\n      return this._o;\n    }\n  });\n  return Run;\n}\n\n/**\n * Returns a current time.\n *\n * @return {Number}\n */\nfunction now() {\n  return new Date().getTime();\n}\n\n/**\n * Returns a function, that, when invoked, will only be triggered\n * at most once during a given window of time.\n *\n * @param {Function} func\n * @param {Number} wait\n * @param {Object=} options\n * @return {Function}\n *\n * @see https://github.com/jashkenas/underscore\n */\n\nfunction throttle(func, wait, options) {\n  var timeout, context, args, result;\n  var previous = 0;\n  if (!options) options = {};\n\n  var later = function later() {\n    previous = options.leading === false ? 0 : now();\n    timeout = null;\n    result = func.apply(context, args);\n    if (!timeout) context = args = null;\n  };\n\n  var throttled = function throttled() {\n    var at = now();\n    if (!previous && options.leading === false) previous = at;\n    var remaining = wait - (at - previous);\n    context = this;\n    args = arguments;\n\n    if (remaining <= 0 || remaining > wait) {\n      if (timeout) {\n        clearTimeout(timeout);\n        timeout = null;\n      }\n\n      previous = at;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    } else if (!timeout && options.trailing !== false) {\n      timeout = setTimeout(later, remaining);\n    }\n\n    return result;\n  };\n\n  throttled.cancel = function () {\n    clearTimeout(timeout);\n    previous = 0;\n    timeout = context = args = null;\n  };\n\n  return throttled;\n}\n\nvar MARGIN_TYPE = {\n  ltr: ['marginLeft', 'marginRight'],\n  rtl: ['marginRight', 'marginLeft']\n};\nfunction Gaps (Glide, Components, Events) {\n  var Gaps = {\n    /**\n     * Applies gaps between slides. First and last\n     * slides do not receive it's edge margins.\n     *\n     * @param {HTMLCollection} slides\n     * @return {Void}\n     */\n    apply: function apply(slides) {\n      for (var i = 0, len = slides.length; i < len; i++) {\n        var style = slides[i].style;\n        var direction = Components.Direction.value;\n\n        if (i !== 0) {\n          style[MARGIN_TYPE[direction][0]] = \"\".concat(this.value / 2, \"px\");\n        } else {\n          style[MARGIN_TYPE[direction][0]] = '';\n        }\n\n        if (i !== slides.length - 1) {\n          style[MARGIN_TYPE[direction][1]] = \"\".concat(this.value / 2, \"px\");\n        } else {\n          style[MARGIN_TYPE[direction][1]] = '';\n        }\n      }\n    },\n\n    /**\n     * Removes gaps from the slides.\n     *\n     * @param {HTMLCollection} slides\n     * @returns {Void}\n    */\n    remove: function remove(slides) {\n      for (var i = 0, len = slides.length; i < len; i++) {\n        var style = slides[i].style;\n        style.marginLeft = '';\n        style.marginRight = '';\n      }\n    }\n  };\n  define(Gaps, 'value', {\n    /**\n     * Gets value of the gap.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      return toInt(Glide.settings.gap);\n    }\n  });\n  define(Gaps, 'grow', {\n    /**\n     * Gets additional dimensions value caused by gaps.\n     * Used to increase width of the slides wrapper.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      return Gaps.value * Components.Sizes.length;\n    }\n  });\n  define(Gaps, 'reductor', {\n    /**\n     * Gets reduction value caused by gaps.\n     * Used to subtract width of the slides.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      var perView = Glide.settings.perView;\n      return Gaps.value * (perView - 1) / perView;\n    }\n  });\n  /**\n   * Apply calculated gaps:\n   * - after building, so slides (including clones) will receive proper margins\n   * - on updating via API, to recalculate gaps with new options\n   */\n\n  Events.on(['build.after', 'update'], throttle(function () {\n    Gaps.apply(Components.Html.wrapper.children);\n  }, 30));\n  /**\n   * Remove gaps:\n   * - on destroying to bring markup to its inital state\n   */\n\n  Events.on('destroy', function () {\n    Gaps.remove(Components.Html.wrapper.children);\n  });\n  return Gaps;\n}\n\n/**\n * Finds siblings nodes of the passed node.\n *\n * @param  {Element} node\n * @return {Array}\n */\nfunction siblings(node) {\n  if (node && node.parentNode) {\n    var n = node.parentNode.firstChild;\n    var matched = [];\n\n    for (; n; n = n.nextSibling) {\n      if (n.nodeType === 1 && n !== node) {\n        matched.push(n);\n      }\n    }\n\n    return matched;\n  }\n\n  return [];\n}\n/**\n * Checks if passed node exist and is a valid element.\n *\n * @param  {Element} node\n * @return {Boolean}\n */\n\nfunction exist(node) {\n  if (node && node instanceof window.HTMLElement) {\n    return true;\n  }\n\n  return false;\n}\n/**\n * Coerces a NodeList to an Array.\n *\n * @param  {NodeList} nodeList\n * @return {Array}\n */\n\nfunction toArray(nodeList) {\n  return Array.prototype.slice.call(nodeList);\n}\n\nvar TRACK_SELECTOR = '[data-glide-el=\"track\"]';\nfunction Html (Glide, Components, Events) {\n  var Html = {\n    /**\n     * Setup slider HTML nodes.\n     *\n     * @param {Glide} glide\n     */\n    mount: function mount() {\n      this.root = Glide.selector;\n      this.track = this.root.querySelector(TRACK_SELECTOR);\n      this.collectSlides();\n    },\n\n    /**\n     * Collect slides\n     */\n    collectSlides: function collectSlides() {\n      this.slides = toArray(this.wrapper.children).filter(function (slide) {\n        return !slide.classList.contains(Glide.settings.classes.slide.clone);\n      });\n    }\n  };\n  define(Html, 'root', {\n    /**\n     * Gets node of the glide main element.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Html._r;\n    },\n\n    /**\n     * Sets node of the glide main element.\n     *\n     * @return {Object}\n     */\n    set: function set(r) {\n      if (isString(r)) {\n        r = document.querySelector(r);\n      }\n\n      if (exist(r)) {\n        Html._r = r;\n      } else {\n        warn('Root element must be a existing Html node');\n      }\n    }\n  });\n  define(Html, 'track', {\n    /**\n     * Gets node of the glide track with slides.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Html._t;\n    },\n\n    /**\n     * Sets node of the glide track with slides.\n     *\n     * @return {Object}\n     */\n    set: function set(t) {\n      if (exist(t)) {\n        Html._t = t;\n      } else {\n        warn(\"Could not find track element. Please use \".concat(TRACK_SELECTOR, \" attribute.\"));\n      }\n    }\n  });\n  define(Html, 'wrapper', {\n    /**\n     * Gets node of the slides wrapper.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Html.track.children[0];\n    }\n  });\n  /**\n   * Add/remove/reorder dynamic slides\n   */\n\n  Events.on('update', function () {\n    Html.collectSlides();\n  });\n  return Html;\n}\n\nfunction Peek (Glide, Components, Events) {\n  var Peek = {\n    /**\n     * Setups how much to peek based on settings.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.value = Glide.settings.peek;\n    }\n  };\n  define(Peek, 'value', {\n    /**\n     * Gets value of the peek.\n     *\n     * @returns {Number|Object}\n     */\n    get: function get() {\n      return Peek._v;\n    },\n\n    /**\n     * Sets value of the peek.\n     *\n     * @param {Number|Object} value\n     * @return {Void}\n     */\n    set: function set(value) {\n      if (isObject(value)) {\n        value.before = toInt(value.before);\n        value.after = toInt(value.after);\n      } else {\n        value = toInt(value);\n      }\n\n      Peek._v = value;\n    }\n  });\n  define(Peek, 'reductor', {\n    /**\n     * Gets reduction value caused by peek.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      var value = Peek.value;\n      var perView = Glide.settings.perView;\n\n      if (isObject(value)) {\n        return value.before / perView + value.after / perView;\n      }\n\n      return value * 2 / perView;\n    }\n  });\n  /**\n   * Recalculate peeking sizes on:\n   * - when resizing window to update to proper percents\n   */\n\n  Events.on(['resize', 'update'], function () {\n    Peek.mount();\n  });\n  return Peek;\n}\n\nfunction Move (Glide, Components, Events) {\n  var Move = {\n    /**\n     * Constructs move component.\n     *\n     * @returns {Void}\n     */\n    mount: function mount() {\n      this._o = 0;\n    },\n\n    /**\n     * Calculates a movement value based on passed offset and currently active index.\n     *\n     * @param  {Number} offset\n     * @return {Void}\n     */\n    make: function make() {\n      var _this = this;\n\n      var offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      this.offset = offset;\n      Events.emit('move', {\n        movement: this.value\n      });\n      Components.Transition.after(function () {\n        Events.emit('move.after', {\n          movement: _this.value\n        });\n      });\n    }\n  };\n  define(Move, 'offset', {\n    /**\n     * Gets an offset value used to modify current translate.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Move._o;\n    },\n\n    /**\n     * Sets an offset value used to modify current translate.\n     *\n     * @return {Object}\n     */\n    set: function set(value) {\n      Move._o = !isUndefined(value) ? toInt(value) : 0;\n    }\n  });\n  define(Move, 'translate', {\n    /**\n     * Gets a raw movement value.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Components.Sizes.slideWidth * Glide.index;\n    }\n  });\n  define(Move, 'value', {\n    /**\n     * Gets an actual movement value corrected by offset.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var offset = this.offset;\n      var translate = this.translate;\n\n      if (Components.Direction.is('rtl')) {\n        return translate + offset;\n      }\n\n      return translate - offset;\n    }\n  });\n  /**\n   * Make movement to proper slide on:\n   * - before build, so glide will start at `startAt` index\n   * - on each standard run to move to newly calculated index\n   */\n\n  Events.on(['build.before', 'run'], function () {\n    Move.make();\n  });\n  return Move;\n}\n\nfunction Sizes (Glide, Components, Events) {\n  var Sizes = {\n    /**\n     * Setups dimensions of slides.\n     *\n     * @return {Void}\n     */\n    setupSlides: function setupSlides() {\n      var width = \"\".concat(this.slideWidth, \"px\");\n      var slides = Components.Html.slides;\n\n      for (var i = 0; i < slides.length; i++) {\n        slides[i].style.width = width;\n      }\n    },\n\n    /**\n     * Setups dimensions of slides wrapper.\n     *\n     * @return {Void}\n     */\n    setupWrapper: function setupWrapper() {\n      Components.Html.wrapper.style.width = \"\".concat(this.wrapperSize, \"px\");\n    },\n\n    /**\n     * Removes applied styles from HTML elements.\n     *\n     * @returns {Void}\n     */\n    remove: function remove() {\n      var slides = Components.Html.slides;\n\n      for (var i = 0; i < slides.length; i++) {\n        slides[i].style.width = '';\n      }\n\n      Components.Html.wrapper.style.width = '';\n    }\n  };\n  define(Sizes, 'length', {\n    /**\n     * Gets count number of the slides.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Components.Html.slides.length;\n    }\n  });\n  define(Sizes, 'width', {\n    /**\n     * Gets width value of the slider (visible area).\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Components.Html.track.offsetWidth;\n    }\n  });\n  define(Sizes, 'wrapperSize', {\n    /**\n     * Gets size of the slides wrapper.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Sizes.slideWidth * Sizes.length + Components.Gaps.grow + Components.Clones.grow;\n    }\n  });\n  define(Sizes, 'slideWidth', {\n    /**\n     * Gets width value of a single slide.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Sizes.width / Glide.settings.perView - Components.Peek.reductor - Components.Gaps.reductor;\n    }\n  });\n  /**\n   * Apply calculated glide's dimensions:\n   * - before building, so other dimensions (e.g. translate) will be calculated propertly\n   * - when resizing window to recalculate sildes dimensions\n   * - on updating via API, to calculate dimensions based on new options\n   */\n\n  Events.on(['build.before', 'resize', 'update'], function () {\n    Sizes.setupSlides();\n    Sizes.setupWrapper();\n  });\n  /**\n   * Remove calculated glide's dimensions:\n   * - on destoting to bring markup to its inital state\n   */\n\n  Events.on('destroy', function () {\n    Sizes.remove();\n  });\n  return Sizes;\n}\n\nfunction Build (Glide, Components, Events) {\n  var Build = {\n    /**\n     * Init glide building. Adds classes, sets\n     * dimensions and setups initial state.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      Events.emit('build.before');\n      this.typeClass();\n      this.activeClass();\n      Events.emit('build.after');\n    },\n\n    /**\n     * Adds `type` class to the glide element.\n     *\n     * @return {Void}\n     */\n    typeClass: function typeClass() {\n      Components.Html.root.classList.add(Glide.settings.classes.type[Glide.settings.type]);\n    },\n\n    /**\n     * Sets active class to current slide.\n     *\n     * @return {Void}\n     */\n    activeClass: function activeClass() {\n      var classes = Glide.settings.classes;\n      var slide = Components.Html.slides[Glide.index];\n\n      if (slide) {\n        slide.classList.add(classes.slide.active);\n        siblings(slide).forEach(function (sibling) {\n          sibling.classList.remove(classes.slide.active);\n        });\n      }\n    },\n\n    /**\n     * Removes HTML classes applied at building.\n     *\n     * @return {Void}\n     */\n    removeClasses: function removeClasses() {\n      var _Glide$settings$class = Glide.settings.classes,\n          type = _Glide$settings$class.type,\n          slide = _Glide$settings$class.slide;\n      Components.Html.root.classList.remove(type[Glide.settings.type]);\n      Components.Html.slides.forEach(function (sibling) {\n        sibling.classList.remove(slide.active);\n      });\n    }\n  };\n  /**\n   * Clear building classes:\n   * - on destroying to bring HTML to its initial state\n   * - on updating to remove classes before remounting component\n   */\n\n  Events.on(['destroy', 'update'], function () {\n    Build.removeClasses();\n  });\n  /**\n   * Remount component:\n   * - on resizing of the window to calculate new dimensions\n   * - on updating settings via API\n   */\n\n  Events.on(['resize', 'update'], function () {\n    Build.mount();\n  });\n  /**\n   * Swap active class of current slide:\n   * - after each move to the new index\n   */\n\n  Events.on('move.after', function () {\n    Build.activeClass();\n  });\n  return Build;\n}\n\nfunction Clones (Glide, Components, Events) {\n  var Clones = {\n    /**\n     * Create pattern map and collect slides to be cloned.\n     */\n    mount: function mount() {\n      this.items = [];\n\n      if (Glide.isType('carousel')) {\n        this.items = this.collect();\n      }\n    },\n\n    /**\n     * Collect clones with pattern.\n     *\n     * @return {[]}\n     */\n    collect: function collect() {\n      var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var slides = Components.Html.slides;\n      var _Glide$settings = Glide.settings,\n          perView = _Glide$settings.perView,\n          classes = _Glide$settings.classes,\n          cloningRatio = _Glide$settings.cloningRatio;\n\n      if (slides.length !== 0) {\n        var peekIncrementer = +!!Glide.settings.peek;\n        var cloneCount = perView + peekIncrementer + Math.round(perView / 2);\n        var append = slides.slice(0, cloneCount).reverse();\n        var prepend = slides.slice(cloneCount * -1);\n\n        for (var r = 0; r < Math.max(cloningRatio, Math.floor(perView / slides.length)); r++) {\n          for (var i = 0; i < append.length; i++) {\n            var clone = append[i].cloneNode(true);\n            clone.classList.add(classes.slide.clone);\n            items.push(clone);\n          }\n\n          for (var _i = 0; _i < prepend.length; _i++) {\n            var _clone = prepend[_i].cloneNode(true);\n\n            _clone.classList.add(classes.slide.clone);\n\n            items.unshift(_clone);\n          }\n        }\n      }\n\n      return items;\n    },\n\n    /**\n     * Append cloned slides with generated pattern.\n     *\n     * @return {Void}\n     */\n    append: function append() {\n      var items = this.items;\n      var _Components$Html = Components.Html,\n          wrapper = _Components$Html.wrapper,\n          slides = _Components$Html.slides;\n      var half = Math.floor(items.length / 2);\n      var prepend = items.slice(0, half).reverse();\n      var append = items.slice(half * -1).reverse();\n      var width = \"\".concat(Components.Sizes.slideWidth, \"px\");\n\n      for (var i = 0; i < append.length; i++) {\n        wrapper.appendChild(append[i]);\n      }\n\n      for (var _i2 = 0; _i2 < prepend.length; _i2++) {\n        wrapper.insertBefore(prepend[_i2], slides[0]);\n      }\n\n      for (var _i3 = 0; _i3 < items.length; _i3++) {\n        items[_i3].style.width = width;\n      }\n    },\n\n    /**\n     * Remove all cloned slides.\n     *\n     * @return {Void}\n     */\n    remove: function remove() {\n      var items = this.items;\n\n      for (var i = 0; i < items.length; i++) {\n        Components.Html.wrapper.removeChild(items[i]);\n      }\n    }\n  };\n  define(Clones, 'grow', {\n    /**\n     * Gets additional dimensions value caused by clones.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return (Components.Sizes.slideWidth + Components.Gaps.value) * Clones.items.length;\n    }\n  });\n  /**\n   * Append additional slide's clones:\n   * - while glide's type is `carousel`\n   */\n\n  Events.on('update', function () {\n    Clones.remove();\n    Clones.mount();\n    Clones.append();\n  });\n  /**\n   * Append additional slide's clones:\n   * - while glide's type is `carousel`\n   */\n\n  Events.on('build.before', function () {\n    if (Glide.isType('carousel')) {\n      Clones.append();\n    }\n  });\n  /**\n   * Remove clones HTMLElements:\n   * - on destroying, to bring HTML to its initial state\n   */\n\n  Events.on('destroy', function () {\n    Clones.remove();\n  });\n  return Clones;\n}\n\nvar EventsBinder = /*#__PURE__*/function () {\n  /**\n   * Construct a EventsBinder instance.\n   */\n  function EventsBinder() {\n    var listeners = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, EventsBinder);\n\n    this.listeners = listeners;\n  }\n  /**\n   * Adds events listeners to arrows HTML elements.\n   *\n   * @param  {String|Array} events\n   * @param  {Element|Window|Document} el\n   * @param  {Function} closure\n   * @param  {Boolean|Object} capture\n   * @return {Void}\n   */\n\n\n  _createClass(EventsBinder, [{\n    key: \"on\",\n    value: function on(events, el, closure) {\n      var capture = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      if (isString(events)) {\n        events = [events];\n      }\n\n      for (var i = 0; i < events.length; i++) {\n        this.listeners[events[i]] = closure;\n        el.addEventListener(events[i], this.listeners[events[i]], capture);\n      }\n    }\n    /**\n     * Removes event listeners from arrows HTML elements.\n     *\n     * @param  {String|Array} events\n     * @param  {Element|Window|Document} el\n     * @param  {Boolean|Object} capture\n     * @return {Void}\n     */\n\n  }, {\n    key: \"off\",\n    value: function off(events, el) {\n      var capture = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n      if (isString(events)) {\n        events = [events];\n      }\n\n      for (var i = 0; i < events.length; i++) {\n        el.removeEventListener(events[i], this.listeners[events[i]], capture);\n      }\n    }\n    /**\n     * Destroy collected listeners.\n     *\n     * @returns {Void}\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      delete this.listeners;\n    }\n  }]);\n\n  return EventsBinder;\n}();\n\nfunction Resize (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var Resize = {\n    /**\n     * Initializes window bindings.\n     */\n    mount: function mount() {\n      this.bind();\n    },\n\n    /**\n     * Binds `rezsize` listener to the window.\n     * It's a costly event, so we are debouncing it.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('resize', window, throttle(function () {\n        Events.emit('resize');\n      }, Glide.settings.throttle));\n    },\n\n    /**\n     * Unbinds listeners from the window.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('resize', window);\n    }\n  };\n  /**\n   * Remove bindings from window:\n   * - on destroying, to remove added EventListener\n   */\n\n  Events.on('destroy', function () {\n    Resize.unbind();\n    Binder.destroy();\n  });\n  return Resize;\n}\n\nvar VALID_DIRECTIONS = ['ltr', 'rtl'];\nvar FLIPED_MOVEMENTS = {\n  '>': '<',\n  '<': '>',\n  '=': '='\n};\nfunction Direction (Glide, Components, Events) {\n  var Direction = {\n    /**\n     * Setups gap value based on settings.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.value = Glide.settings.direction;\n    },\n\n    /**\n     * Resolves pattern based on direction value\n     *\n     * @param {String} pattern\n     * @returns {String}\n     */\n    resolve: function resolve(pattern) {\n      var token = pattern.slice(0, 1);\n\n      if (this.is('rtl')) {\n        return pattern.split(token).join(FLIPED_MOVEMENTS[token]);\n      }\n\n      return pattern;\n    },\n\n    /**\n     * Checks value of direction mode.\n     *\n     * @param {String} direction\n     * @returns {Boolean}\n     */\n    is: function is(direction) {\n      return this.value === direction;\n    },\n\n    /**\n     * Applies direction class to the root HTML element.\n     *\n     * @return {Void}\n     */\n    addClass: function addClass() {\n      Components.Html.root.classList.add(Glide.settings.classes.direction[this.value]);\n    },\n\n    /**\n     * Removes direction class from the root HTML element.\n     *\n     * @return {Void}\n     */\n    removeClass: function removeClass() {\n      Components.Html.root.classList.remove(Glide.settings.classes.direction[this.value]);\n    }\n  };\n  define(Direction, 'value', {\n    /**\n     * Gets value of the direction.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      return Direction._v;\n    },\n\n    /**\n     * Sets value of the direction.\n     *\n     * @param {String} value\n     * @return {Void}\n     */\n    set: function set(value) {\n      if (VALID_DIRECTIONS.indexOf(value) > -1) {\n        Direction._v = value;\n      } else {\n        warn('Direction value must be `ltr` or `rtl`');\n      }\n    }\n  });\n  /**\n   * Clear direction class:\n   * - on destroy to bring HTML to its initial state\n   * - on update to remove class before reappling bellow\n   */\n\n  Events.on(['destroy', 'update'], function () {\n    Direction.removeClass();\n  });\n  /**\n   * Remount component:\n   * - on update to reflect changes in direction value\n   */\n\n  Events.on('update', function () {\n    Direction.mount();\n  });\n  /**\n   * Apply direction class:\n   * - before building to apply class for the first time\n   * - on updating to reapply direction class that may changed\n   */\n\n  Events.on(['build.before', 'update'], function () {\n    Direction.addClass();\n  });\n  return Direction;\n}\n\n/**\n * Reflects value of glide movement.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Rtl (Glide, Components) {\n  return {\n    /**\n     * Negates the passed translate if glide is in RTL option.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      if (Components.Direction.is('rtl')) {\n        return -translate;\n      }\n\n      return translate;\n    }\n  };\n}\n\n/**\n * Updates glide movement with a `gap` settings.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Gap (Glide, Components) {\n  return {\n    /**\n     * Modifies passed translate value with number in the `gap` settings.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      var multiplier = Math.floor(translate / Components.Sizes.slideWidth);\n      return translate + Components.Gaps.value * multiplier;\n    }\n  };\n}\n\n/**\n * Updates glide movement with width of additional clones width.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Grow (Glide, Components) {\n  return {\n    /**\n     * Adds to the passed translate width of the half of clones.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      return translate + Components.Clones.grow / 2;\n    }\n  };\n}\n\n/**\n * Updates glide movement with a `peek` settings.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\n\nfunction Peeking (Glide, Components) {\n  return {\n    /**\n     * Modifies passed translate value with a `peek` setting.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      if (Glide.settings.focusAt >= 0) {\n        var peek = Components.Peek.value;\n\n        if (isObject(peek)) {\n          return translate - peek.before;\n        }\n\n        return translate - peek;\n      }\n\n      return translate;\n    }\n  };\n}\n\n/**\n * Updates glide movement with a `focusAt` settings.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Focusing (Glide, Components) {\n  return {\n    /**\n     * Modifies passed translate value with index in the `focusAt` setting.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      var gap = Components.Gaps.value;\n      var width = Components.Sizes.width;\n      var focusAt = Glide.settings.focusAt;\n      var slideWidth = Components.Sizes.slideWidth;\n\n      if (focusAt === 'center') {\n        return translate - (width / 2 - slideWidth / 2);\n      }\n\n      return translate - slideWidth * focusAt - gap * focusAt;\n    }\n  };\n}\n\n/**\n * Applies diffrent transformers on translate value.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\n\nfunction mutator (Glide, Components, Events) {\n  /**\n   * Merge instance transformers with collection of default transformers.\n   * It's important that the Rtl component be last on the list,\n   * so it reflects all previous transformations.\n   *\n   * @type {Array}\n   */\n  var TRANSFORMERS = [Gap, Grow, Peeking, Focusing].concat(Glide._t, [Rtl]);\n  return {\n    /**\n     * Piplines translate value with registered transformers.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    mutate: function mutate(translate) {\n      for (var i = 0; i < TRANSFORMERS.length; i++) {\n        var transformer = TRANSFORMERS[i];\n\n        if (isFunction(transformer) && isFunction(transformer().modify)) {\n          translate = transformer(Glide, Components, Events).modify(translate);\n        } else {\n          warn('Transformer should be a function that returns an object with `modify()` method');\n        }\n      }\n\n      return translate;\n    }\n  };\n}\n\nfunction Translate (Glide, Components, Events) {\n  var Translate = {\n    /**\n     * Sets value of translate on HTML element.\n     *\n     * @param {Number} value\n     * @return {Void}\n     */\n    set: function set(value) {\n      var transform = mutator(Glide, Components).mutate(value);\n      var translate3d = \"translate3d(\".concat(-1 * transform, \"px, 0px, 0px)\");\n      Components.Html.wrapper.style.mozTransform = translate3d; // needed for supported Firefox 10-15\n\n      Components.Html.wrapper.style.webkitTransform = translate3d; // needed for supported Chrome 10-35, Safari 5.1-8, and Opera 15-22\n\n      Components.Html.wrapper.style.transform = translate3d;\n    },\n\n    /**\n     * Removes value of translate from HTML element.\n     *\n     * @return {Void}\n     */\n    remove: function remove() {\n      Components.Html.wrapper.style.transform = '';\n    },\n\n    /**\n     * @return {number}\n     */\n    getStartIndex: function getStartIndex() {\n      var length = Components.Sizes.length;\n      var index = Glide.index;\n      var perView = Glide.settings.perView;\n\n      if (Components.Run.isOffset('>') || Components.Run.isOffset('|>')) {\n        return length + (index - perView);\n      } // \"modulo length\" converts an index that equals length to zero\n\n\n      return (index + perView) % length;\n    },\n\n    /**\n     * @return {number}\n     */\n    getTravelDistance: function getTravelDistance() {\n      var travelDistance = Components.Sizes.slideWidth * Glide.settings.perView;\n\n      if (Components.Run.isOffset('>') || Components.Run.isOffset('|>')) {\n        // reverse travel distance so that we don't have to change subtract operations\n        return travelDistance * -1;\n      }\n\n      return travelDistance;\n    }\n  };\n  /**\n   * Set new translate value:\n   * - on move to reflect index change\n   * - on updating via API to reflect possible changes in options\n   */\n\n  Events.on('move', function (context) {\n    if (!Glide.isType('carousel') || !Components.Run.isOffset()) {\n      return Translate.set(context.movement);\n    }\n\n    Components.Transition.after(function () {\n      Events.emit('translate.jump');\n      Translate.set(Components.Sizes.slideWidth * Glide.index);\n    });\n    var startWidth = Components.Sizes.slideWidth * Components.Translate.getStartIndex();\n    return Translate.set(startWidth - Components.Translate.getTravelDistance());\n  });\n  /**\n   * Remove translate:\n   * - on destroying to bring markup to its inital state\n   */\n\n  Events.on('destroy', function () {\n    Translate.remove();\n  });\n  return Translate;\n}\n\nfunction Transition (Glide, Components, Events) {\n  /**\n   * Holds inactivity status of transition.\n   * When true transition is not applied.\n   *\n   * @type {Boolean}\n   */\n  var disabled = false;\n  var Transition = {\n    /**\n     * Composes string of the CSS transition.\n     *\n     * @param {String} property\n     * @return {String}\n     */\n    compose: function compose(property) {\n      var settings = Glide.settings;\n\n      if (!disabled) {\n        return \"\".concat(property, \" \").concat(this.duration, \"ms \").concat(settings.animationTimingFunc);\n      }\n\n      return \"\".concat(property, \" 0ms \").concat(settings.animationTimingFunc);\n    },\n\n    /**\n     * Sets value of transition on HTML element.\n     *\n     * @param {String=} property\n     * @return {Void}\n     */\n    set: function set() {\n      var property = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'transform';\n      Components.Html.wrapper.style.transition = this.compose(property);\n    },\n\n    /**\n     * Removes value of transition from HTML element.\n     *\n     * @return {Void}\n     */\n    remove: function remove() {\n      Components.Html.wrapper.style.transition = '';\n    },\n\n    /**\n     * Runs callback after animation.\n     *\n     * @param  {Function} callback\n     * @return {Void}\n     */\n    after: function after(callback) {\n      setTimeout(function () {\n        callback();\n      }, this.duration);\n    },\n\n    /**\n     * Enable transition.\n     *\n     * @return {Void}\n     */\n    enable: function enable() {\n      disabled = false;\n      this.set();\n    },\n\n    /**\n     * Disable transition.\n     *\n     * @return {Void}\n     */\n    disable: function disable() {\n      disabled = true;\n      this.set();\n    }\n  };\n  define(Transition, 'duration', {\n    /**\n     * Gets duration of the transition based\n     * on currently running animation type.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var settings = Glide.settings;\n\n      if (Glide.isType('slider') && Components.Run.offset) {\n        return settings.rewindDuration;\n      }\n\n      return settings.animationDuration;\n    }\n  });\n  /**\n   * Set transition `style` value:\n   * - on each moving, because it may be cleared by offset move\n   */\n\n  Events.on('move', function () {\n    Transition.set();\n  });\n  /**\n   * Disable transition:\n   * - before initial build to avoid transitioning from `0` to `startAt` index\n   * - while resizing window and recalculating dimensions\n   * - on jumping from offset transition at start and end edges in `carousel` type\n   */\n\n  Events.on(['build.before', 'resize', 'translate.jump'], function () {\n    Transition.disable();\n  });\n  /**\n   * Enable transition:\n   * - on each running, because it may be disabled by offset move\n   */\n\n  Events.on('run', function () {\n    Transition.enable();\n  });\n  /**\n   * Remove transition:\n   * - on destroying to bring markup to its inital state\n   */\n\n  Events.on('destroy', function () {\n    Transition.remove();\n  });\n  return Transition;\n}\n\n/**\n * Test via a getter in the options object to see\n * if the passive property is accessed.\n *\n * @see https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n */\nvar supportsPassive = false;\n\ntry {\n  var opts = Object.defineProperty({}, 'passive', {\n    get: function get() {\n      supportsPassive = true;\n    }\n  });\n  window.addEventListener('testPassive', null, opts);\n  window.removeEventListener('testPassive', null, opts);\n} catch (e) {}\n\nvar supportsPassive$1 = supportsPassive;\n\nvar START_EVENTS = ['touchstart', 'mousedown'];\nvar MOVE_EVENTS = ['touchmove', 'mousemove'];\nvar END_EVENTS = ['touchend', 'touchcancel', 'mouseup', 'mouseleave'];\nvar MOUSE_EVENTS = ['mousedown', 'mousemove', 'mouseup', 'mouseleave'];\nfunction Swipe (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var swipeSin = 0;\n  var swipeStartX = 0;\n  var swipeStartY = 0;\n  var disabled = false;\n  var capture = supportsPassive$1 ? {\n    passive: true\n  } : false;\n  var Swipe = {\n    /**\n     * Initializes swipe bindings.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.bindSwipeStart();\n    },\n\n    /**\n     * Handler for `swipestart` event. Calculates entry points of the user's tap.\n     *\n     * @param {Object} event\n     * @return {Void}\n     */\n    start: function start(event) {\n      if (!disabled && !Glide.disabled) {\n        this.disable();\n        var swipe = this.touches(event);\n        swipeSin = null;\n        swipeStartX = toInt(swipe.pageX);\n        swipeStartY = toInt(swipe.pageY);\n        this.bindSwipeMove();\n        this.bindSwipeEnd();\n        Events.emit('swipe.start');\n      }\n    },\n\n    /**\n     * Handler for `swipemove` event. Calculates user's tap angle and distance.\n     *\n     * @param {Object} event\n     */\n    move: function move(event) {\n      if (!Glide.disabled) {\n        var _Glide$settings = Glide.settings,\n            touchAngle = _Glide$settings.touchAngle,\n            touchRatio = _Glide$settings.touchRatio,\n            classes = _Glide$settings.classes;\n        var swipe = this.touches(event);\n        var subExSx = toInt(swipe.pageX) - swipeStartX;\n        var subEySy = toInt(swipe.pageY) - swipeStartY;\n        var powEX = Math.abs(subExSx << 2);\n        var powEY = Math.abs(subEySy << 2);\n        var swipeHypotenuse = Math.sqrt(powEX + powEY);\n        var swipeCathetus = Math.sqrt(powEY);\n        swipeSin = Math.asin(swipeCathetus / swipeHypotenuse);\n\n        if (swipeSin * 180 / Math.PI < touchAngle) {\n          event.stopPropagation();\n          Components.Move.make(subExSx * toFloat(touchRatio));\n          Components.Html.root.classList.add(classes.dragging);\n          Events.emit('swipe.move');\n        } else {\n          return false;\n        }\n      }\n    },\n\n    /**\n     * Handler for `swipeend` event. Finitializes user's tap and decides about glide move.\n     *\n     * @param {Object} event\n     * @return {Void}\n     */\n    end: function end(event) {\n      if (!Glide.disabled) {\n        var _Glide$settings2 = Glide.settings,\n            perSwipe = _Glide$settings2.perSwipe,\n            touchAngle = _Glide$settings2.touchAngle,\n            classes = _Glide$settings2.classes;\n        var swipe = this.touches(event);\n        var threshold = this.threshold(event);\n        var swipeDistance = swipe.pageX - swipeStartX;\n        var swipeDeg = swipeSin * 180 / Math.PI;\n        this.enable();\n\n        if (swipeDistance > threshold && swipeDeg < touchAngle) {\n          Components.Run.make(Components.Direction.resolve(\"\".concat(perSwipe, \"<\")));\n        } else if (swipeDistance < -threshold && swipeDeg < touchAngle) {\n          Components.Run.make(Components.Direction.resolve(\"\".concat(perSwipe, \">\")));\n        } else {\n          // While swipe don't reach distance apply previous transform.\n          Components.Move.make();\n        }\n\n        Components.Html.root.classList.remove(classes.dragging);\n        this.unbindSwipeMove();\n        this.unbindSwipeEnd();\n        Events.emit('swipe.end');\n      }\n    },\n\n    /**\n     * Binds swipe's starting event.\n     *\n     * @return {Void}\n     */\n    bindSwipeStart: function bindSwipeStart() {\n      var _this = this;\n\n      var _Glide$settings3 = Glide.settings,\n          swipeThreshold = _Glide$settings3.swipeThreshold,\n          dragThreshold = _Glide$settings3.dragThreshold;\n\n      if (swipeThreshold) {\n        Binder.on(START_EVENTS[0], Components.Html.wrapper, function (event) {\n          _this.start(event);\n        }, capture);\n      }\n\n      if (dragThreshold) {\n        Binder.on(START_EVENTS[1], Components.Html.wrapper, function (event) {\n          _this.start(event);\n        }, capture);\n      }\n    },\n\n    /**\n     * Unbinds swipe's starting event.\n     *\n     * @return {Void}\n     */\n    unbindSwipeStart: function unbindSwipeStart() {\n      Binder.off(START_EVENTS[0], Components.Html.wrapper, capture);\n      Binder.off(START_EVENTS[1], Components.Html.wrapper, capture);\n    },\n\n    /**\n     * Binds swipe's moving event.\n     *\n     * @return {Void}\n     */\n    bindSwipeMove: function bindSwipeMove() {\n      var _this2 = this;\n\n      Binder.on(MOVE_EVENTS, Components.Html.wrapper, throttle(function (event) {\n        _this2.move(event);\n      }, Glide.settings.throttle), capture);\n    },\n\n    /**\n     * Unbinds swipe's moving event.\n     *\n     * @return {Void}\n     */\n    unbindSwipeMove: function unbindSwipeMove() {\n      Binder.off(MOVE_EVENTS, Components.Html.wrapper, capture);\n    },\n\n    /**\n     * Binds swipe's ending event.\n     *\n     * @return {Void}\n     */\n    bindSwipeEnd: function bindSwipeEnd() {\n      var _this3 = this;\n\n      Binder.on(END_EVENTS, Components.Html.wrapper, function (event) {\n        _this3.end(event);\n      });\n    },\n\n    /**\n     * Unbinds swipe's ending event.\n     *\n     * @return {Void}\n     */\n    unbindSwipeEnd: function unbindSwipeEnd() {\n      Binder.off(END_EVENTS, Components.Html.wrapper);\n    },\n\n    /**\n     * Normalizes event touches points accorting to different types.\n     *\n     * @param {Object} event\n     */\n    touches: function touches(event) {\n      if (MOUSE_EVENTS.indexOf(event.type) > -1) {\n        return event;\n      }\n\n      return event.touches[0] || event.changedTouches[0];\n    },\n\n    /**\n     * Gets value of minimum swipe distance settings based on event type.\n     *\n     * @return {Number}\n     */\n    threshold: function threshold(event) {\n      var settings = Glide.settings;\n\n      if (MOUSE_EVENTS.indexOf(event.type) > -1) {\n        return settings.dragThreshold;\n      }\n\n      return settings.swipeThreshold;\n    },\n\n    /**\n     * Enables swipe event.\n     *\n     * @return {self}\n     */\n    enable: function enable() {\n      disabled = false;\n      Components.Transition.enable();\n      return this;\n    },\n\n    /**\n     * Disables swipe event.\n     *\n     * @return {self}\n     */\n    disable: function disable() {\n      disabled = true;\n      Components.Transition.disable();\n      return this;\n    }\n  };\n  /**\n   * Add component class:\n   * - after initial building\n   */\n\n  Events.on('build.after', function () {\n    Components.Html.root.classList.add(Glide.settings.classes.swipeable);\n  });\n  /**\n   * Remove swiping bindings:\n   * - on destroying, to remove added EventListeners\n   */\n\n  Events.on('destroy', function () {\n    Swipe.unbindSwipeStart();\n    Swipe.unbindSwipeMove();\n    Swipe.unbindSwipeEnd();\n    Binder.destroy();\n  });\n  return Swipe;\n}\n\nfunction Images (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var Images = {\n    /**\n     * Binds listener to glide wrapper.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.bind();\n    },\n\n    /**\n     * Binds `dragstart` event on wrapper to prevent dragging images.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('dragstart', Components.Html.wrapper, this.dragstart);\n    },\n\n    /**\n     * Unbinds `dragstart` event on wrapper.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('dragstart', Components.Html.wrapper);\n    },\n\n    /**\n     * Event handler. Prevents dragging.\n     *\n     * @return {Void}\n     */\n    dragstart: function dragstart(event) {\n      event.preventDefault();\n    }\n  };\n  /**\n   * Remove bindings from images:\n   * - on destroying, to remove added EventListeners\n   */\n\n  Events.on('destroy', function () {\n    Images.unbind();\n    Binder.destroy();\n  });\n  return Images;\n}\n\nfunction Anchors (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  /**\n   * Holds detaching status of anchors.\n   * Prevents detaching of already detached anchors.\n   *\n   * @private\n   * @type {Boolean}\n   */\n\n  var detached = false;\n  /**\n   * Holds preventing status of anchors.\n   * If `true` redirection after click will be disabled.\n   *\n   * @private\n   * @type {Boolean}\n   */\n\n  var prevented = false;\n  var Anchors = {\n    /**\n     * Setups a initial state of anchors component.\n     *\n     * @returns {Void}\n     */\n    mount: function mount() {\n      /**\n       * Holds collection of anchors elements.\n       *\n       * @private\n       * @type {HTMLCollection}\n       */\n      this._a = Components.Html.wrapper.querySelectorAll('a');\n      this.bind();\n    },\n\n    /**\n     * Binds events to anchors inside a track.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('click', Components.Html.wrapper, this.click);\n    },\n\n    /**\n     * Unbinds events attached to anchors inside a track.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('click', Components.Html.wrapper);\n    },\n\n    /**\n     * Handler for click event. Prevents clicks when glide is in `prevent` status.\n     *\n     * @param  {Object} event\n     * @return {Void}\n     */\n    click: function click(event) {\n      if (prevented) {\n        event.stopPropagation();\n        event.preventDefault();\n      }\n    },\n\n    /**\n     * Detaches anchors click event inside glide.\n     *\n     * @return {self}\n     */\n    detach: function detach() {\n      prevented = true;\n\n      if (!detached) {\n        for (var i = 0; i < this.items.length; i++) {\n          this.items[i].draggable = false;\n        }\n\n        detached = true;\n      }\n\n      return this;\n    },\n\n    /**\n     * Attaches anchors click events inside glide.\n     *\n     * @return {self}\n     */\n    attach: function attach() {\n      prevented = false;\n\n      if (detached) {\n        for (var i = 0; i < this.items.length; i++) {\n          this.items[i].draggable = true;\n        }\n\n        detached = false;\n      }\n\n      return this;\n    }\n  };\n  define(Anchors, 'items', {\n    /**\n     * Gets collection of the arrows HTML elements.\n     *\n     * @return {HTMLElement[]}\n     */\n    get: function get() {\n      return Anchors._a;\n    }\n  });\n  /**\n   * Detach anchors inside slides:\n   * - on swiping, so they won't redirect to its `href` attributes\n   */\n\n  Events.on('swipe.move', function () {\n    Anchors.detach();\n  });\n  /**\n   * Attach anchors inside slides:\n   * - after swiping and transitions ends, so they can redirect after click again\n   */\n\n  Events.on('swipe.end', function () {\n    Components.Transition.after(function () {\n      Anchors.attach();\n    });\n  });\n  /**\n   * Unbind anchors inside slides:\n   * - on destroying, to bring anchors to its initial state\n   */\n\n  Events.on('destroy', function () {\n    Anchors.attach();\n    Anchors.unbind();\n    Binder.destroy();\n  });\n  return Anchors;\n}\n\nvar NAV_SELECTOR = '[data-glide-el=\"controls[nav]\"]';\nvar CONTROLS_SELECTOR = '[data-glide-el^=\"controls\"]';\nvar PREVIOUS_CONTROLS_SELECTOR = \"\".concat(CONTROLS_SELECTOR, \" [data-glide-dir*=\\\"<\\\"]\");\nvar NEXT_CONTROLS_SELECTOR = \"\".concat(CONTROLS_SELECTOR, \" [data-glide-dir*=\\\">\\\"]\");\nfunction Controls (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var capture = supportsPassive$1 ? {\n    passive: true\n  } : false;\n  var Controls = {\n    /**\n     * Inits arrows. Binds events listeners\n     * to the arrows HTML elements.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      /**\n       * Collection of navigation HTML elements.\n       *\n       * @private\n       * @type {HTMLCollection}\n       */\n      this._n = Components.Html.root.querySelectorAll(NAV_SELECTOR);\n      /**\n       * Collection of controls HTML elements.\n       *\n       * @private\n       * @type {HTMLCollection}\n       */\n\n      this._c = Components.Html.root.querySelectorAll(CONTROLS_SELECTOR);\n      /**\n       * Collection of arrow control HTML elements.\n       *\n       * @private\n       * @type {Object}\n       */\n\n      this._arrowControls = {\n        previous: Components.Html.root.querySelectorAll(PREVIOUS_CONTROLS_SELECTOR),\n        next: Components.Html.root.querySelectorAll(NEXT_CONTROLS_SELECTOR)\n      };\n      this.addBindings();\n    },\n\n    /**\n     * Sets active class to current slide.\n     *\n     * @return {Void}\n     */\n    setActive: function setActive() {\n      for (var i = 0; i < this._n.length; i++) {\n        this.addClass(this._n[i].children);\n      }\n    },\n\n    /**\n     * Removes active class to current slide.\n     *\n     * @return {Void}\n     */\n    removeActive: function removeActive() {\n      for (var i = 0; i < this._n.length; i++) {\n        this.removeClass(this._n[i].children);\n      }\n    },\n\n    /**\n     * Toggles active class on items inside navigation.\n     *\n     * @param  {HTMLElement} controls\n     * @return {Void}\n     */\n    addClass: function addClass(controls) {\n      var settings = Glide.settings;\n      var item = controls[Glide.index];\n\n      if (!item) {\n        return;\n      }\n\n      if (item) {\n        item.classList.add(settings.classes.nav.active);\n        siblings(item).forEach(function (sibling) {\n          sibling.classList.remove(settings.classes.nav.active);\n        });\n      }\n    },\n\n    /**\n     * Removes active class from active control.\n     *\n     * @param  {HTMLElement} controls\n     * @return {Void}\n     */\n    removeClass: function removeClass(controls) {\n      var item = controls[Glide.index];\n\n      if (item) {\n        item.classList.remove(Glide.settings.classes.nav.active);\n      }\n    },\n\n    /**\n     * Calculates, removes or adds `Glide.settings.classes.disabledArrow` class on the control arrows\n     */\n    setArrowState: function setArrowState() {\n      if (Glide.settings.rewind) {\n        return;\n      }\n\n      var next = Controls._arrowControls.next;\n      var previous = Controls._arrowControls.previous;\n      this.resetArrowState(next, previous);\n\n      if (Glide.index === 0) {\n        this.disableArrow(previous);\n      }\n\n      if (Glide.index === Components.Run.length) {\n        this.disableArrow(next);\n      }\n    },\n\n    /**\n     * Removes `Glide.settings.classes.disabledArrow` from given NodeList elements\n     *\n     * @param {NodeList[]} lists\n     */\n    resetArrowState: function resetArrowState() {\n      var settings = Glide.settings;\n\n      for (var _len = arguments.length, lists = new Array(_len), _key = 0; _key < _len; _key++) {\n        lists[_key] = arguments[_key];\n      }\n\n      lists.forEach(function (list) {\n        toArray(list).forEach(function (element) {\n          element.classList.remove(settings.classes.arrow.disabled);\n        });\n      });\n    },\n\n    /**\n     * Adds `Glide.settings.classes.disabledArrow` to given NodeList elements\n     *\n     * @param {NodeList[]} lists\n     */\n    disableArrow: function disableArrow() {\n      var settings = Glide.settings;\n\n      for (var _len2 = arguments.length, lists = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        lists[_key2] = arguments[_key2];\n      }\n\n      lists.forEach(function (list) {\n        toArray(list).forEach(function (element) {\n          element.classList.add(settings.classes.arrow.disabled);\n        });\n      });\n    },\n\n    /**\n     * Adds handles to the each group of controls.\n     *\n     * @return {Void}\n     */\n    addBindings: function addBindings() {\n      for (var i = 0; i < this._c.length; i++) {\n        this.bind(this._c[i].children);\n      }\n    },\n\n    /**\n     * Removes handles from the each group of controls.\n     *\n     * @return {Void}\n     */\n    removeBindings: function removeBindings() {\n      for (var i = 0; i < this._c.length; i++) {\n        this.unbind(this._c[i].children);\n      }\n    },\n\n    /**\n     * Binds events to arrows HTML elements.\n     *\n     * @param {HTMLCollection} elements\n     * @return {Void}\n     */\n    bind: function bind(elements) {\n      for (var i = 0; i < elements.length; i++) {\n        Binder.on('click', elements[i], this.click);\n        Binder.on('touchstart', elements[i], this.click, capture);\n      }\n    },\n\n    /**\n     * Unbinds events binded to the arrows HTML elements.\n     *\n     * @param {HTMLCollection} elements\n     * @return {Void}\n     */\n    unbind: function unbind(elements) {\n      for (var i = 0; i < elements.length; i++) {\n        Binder.off(['click', 'touchstart'], elements[i]);\n      }\n    },\n\n    /**\n     * Handles `click` event on the arrows HTML elements.\n     * Moves slider in direction given via the\n     * `data-glide-dir` attribute.\n     *\n     * @param {Object} event\n     * @return {void}\n     */\n    click: function click(event) {\n      if (!supportsPassive$1 && event.type === 'touchstart') {\n        event.preventDefault();\n      }\n\n      var direction = event.currentTarget.getAttribute('data-glide-dir');\n      Components.Run.make(Components.Direction.resolve(direction));\n    }\n  };\n  define(Controls, 'items', {\n    /**\n     * Gets collection of the controls HTML elements.\n     *\n     * @return {HTMLElement[]}\n     */\n    get: function get() {\n      return Controls._c;\n    }\n  });\n  /**\n   * Swap active class of current navigation item:\n   * - after mounting to set it to initial index\n   * - after each move to the new index\n   */\n\n  Events.on(['mount.after', 'move.after'], function () {\n    Controls.setActive();\n  });\n  /**\n   * Add or remove disabled class of arrow elements\n   */\n\n  Events.on(['mount.after', 'run'], function () {\n    Controls.setArrowState();\n  });\n  /**\n   * Remove bindings and HTML Classes:\n   * - on destroying, to bring markup to its initial state\n   */\n\n  Events.on('destroy', function () {\n    Controls.removeBindings();\n    Controls.removeActive();\n    Binder.destroy();\n  });\n  return Controls;\n}\n\nfunction Keyboard (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var Keyboard = {\n    /**\n     * Binds keyboard events on component mount.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      if (Glide.settings.keyboard) {\n        this.bind();\n      }\n    },\n\n    /**\n     * Adds keyboard press events.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('keyup', document, this.press);\n    },\n\n    /**\n     * Removes keyboard press events.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('keyup', document);\n    },\n\n    /**\n     * Handles keyboard's arrows press and moving glide foward and backward.\n     *\n     * @param  {Object} event\n     * @return {Void}\n     */\n    press: function press(event) {\n      var perSwipe = Glide.settings.perSwipe;\n\n      if (event.code === 'ArrowRight') {\n        Components.Run.make(Components.Direction.resolve(\"\".concat(perSwipe, \">\")));\n      }\n\n      if (event.code === 'ArrowLeft') {\n        Components.Run.make(Components.Direction.resolve(\"\".concat(perSwipe, \"<\")));\n      }\n    }\n  };\n  /**\n   * Remove bindings from keyboard:\n   * - on destroying to remove added events\n   * - on updating to remove events before remounting\n   */\n\n  Events.on(['destroy', 'update'], function () {\n    Keyboard.unbind();\n  });\n  /**\n   * Remount component\n   * - on updating to reflect potential changes in settings\n   */\n\n  Events.on('update', function () {\n    Keyboard.mount();\n  });\n  /**\n   * Destroy binder:\n   * - on destroying to remove listeners\n   */\n\n  Events.on('destroy', function () {\n    Binder.destroy();\n  });\n  return Keyboard;\n}\n\nfunction Autoplay (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var Autoplay = {\n    /**\n     * Initializes autoplaying and events.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.enable();\n      this.start();\n\n      if (Glide.settings.hoverpause) {\n        this.bind();\n      }\n    },\n\n    /**\n     * Enables autoplaying\n     *\n     * @returns {Void}\n     */\n    enable: function enable() {\n      this._e = true;\n    },\n\n    /**\n     * Disables autoplaying.\n     *\n     * @returns {Void}\n     */\n    disable: function disable() {\n      this._e = false;\n    },\n\n    /**\n     * Starts autoplaying in configured interval.\n     *\n     * @param {Boolean|Number} force Run autoplaying with passed interval regardless of `autoplay` settings\n     * @return {Void}\n     */\n    start: function start() {\n      var _this = this;\n\n      if (!this._e) {\n        return;\n      }\n\n      this.enable();\n\n      if (Glide.settings.autoplay) {\n        if (isUndefined(this._i)) {\n          this._i = setInterval(function () {\n            _this.stop();\n\n            Components.Run.make('>');\n\n            _this.start();\n\n            Events.emit('autoplay');\n          }, this.time);\n        }\n      }\n    },\n\n    /**\n     * Stops autorunning of the glide.\n     *\n     * @return {Void}\n     */\n    stop: function stop() {\n      this._i = clearInterval(this._i);\n    },\n\n    /**\n     * Stops autoplaying while mouse is over glide's area.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      var _this2 = this;\n\n      Binder.on('mouseover', Components.Html.root, function () {\n        if (_this2._e) {\n          _this2.stop();\n        }\n      });\n      Binder.on('mouseout', Components.Html.root, function () {\n        if (_this2._e) {\n          _this2.start();\n        }\n      });\n    },\n\n    /**\n     * Unbind mouseover events.\n     *\n     * @returns {Void}\n     */\n    unbind: function unbind() {\n      Binder.off(['mouseover', 'mouseout'], Components.Html.root);\n    }\n  };\n  define(Autoplay, 'time', {\n    /**\n     * Gets time period value for the autoplay interval. Prioritizes\n     * times in `data-glide-autoplay` attrubutes over options.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var autoplay = Components.Html.slides[Glide.index].getAttribute('data-glide-autoplay');\n\n      if (autoplay) {\n        return toInt(autoplay);\n      }\n\n      return toInt(Glide.settings.autoplay);\n    }\n  });\n  /**\n   * Stop autoplaying and unbind events:\n   * - on destroying, to clear defined interval\n   * - on updating via API to reset interval that may changed\n   */\n\n  Events.on(['destroy', 'update'], function () {\n    Autoplay.unbind();\n  });\n  /**\n   * Stop autoplaying:\n   * - before each run, to restart autoplaying\n   * - on pausing via API\n   * - on destroying, to clear defined interval\n   * - while starting a swipe\n   * - on updating via API to reset interval that may changed\n   */\n\n  Events.on(['run.before', 'swipe.start', 'update'], function () {\n    Autoplay.stop();\n  });\n  Events.on(['pause', 'destroy'], function () {\n    Autoplay.disable();\n    Autoplay.stop();\n  });\n  /**\n   * Start autoplaying:\n   * - after each run, to restart autoplaying\n   * - on playing via API\n   * - while ending a swipe\n   */\n\n  Events.on(['run.after', 'swipe.end'], function () {\n    Autoplay.start();\n  });\n  /**\n   * Start autoplaying:\n   * - after each run, to restart autoplaying\n   * - on playing via API\n   * - while ending a swipe\n   */\n\n  Events.on(['play'], function () {\n    Autoplay.enable();\n    Autoplay.start();\n  });\n  /**\n   * Remount autoplaying:\n   * - on updating via API to reset interval that may changed\n   */\n\n  Events.on('update', function () {\n    Autoplay.mount();\n  });\n  /**\n   * Destroy a binder:\n   * - on destroying glide instance to clearup listeners\n   */\n\n  Events.on('destroy', function () {\n    Binder.destroy();\n  });\n  return Autoplay;\n}\n\n/**\n * Sorts keys of breakpoint object so they will be ordered from lower to bigger.\n *\n * @param {Object} points\n * @returns {Object}\n */\n\nfunction sortBreakpoints(points) {\n  if (isObject(points)) {\n    return sortKeys(points);\n  } else {\n    warn(\"Breakpoints option must be an object\");\n  }\n\n  return {};\n}\n\nfunction Breakpoints (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  /**\n   * Holds reference to settings.\n   *\n   * @type {Object}\n   */\n\n  var settings = Glide.settings;\n  /**\n   * Holds reference to breakpoints object in settings. Sorts breakpoints\n   * from smaller to larger. It is required in order to proper\n   * matching currently active breakpoint settings.\n   *\n   * @type {Object}\n   */\n\n  var points = sortBreakpoints(settings.breakpoints);\n  /**\n   * Cache initial settings before overwritting.\n   *\n   * @type {Object}\n   */\n\n  var defaults = Object.assign({}, settings);\n  var Breakpoints = {\n    /**\n     * Matches settings for currectly matching media breakpoint.\n     *\n     * @param {Object} points\n     * @returns {Object}\n     */\n    match: function match(points) {\n      if (typeof window.matchMedia !== 'undefined') {\n        for (var point in points) {\n          if (points.hasOwnProperty(point)) {\n            if (window.matchMedia(\"(max-width: \".concat(point, \"px)\")).matches) {\n              return points[point];\n            }\n          }\n        }\n      }\n\n      return defaults;\n    }\n  };\n  /**\n   * Overwrite instance settings with currently matching breakpoint settings.\n   * This happens right after component initialization.\n   */\n\n  Object.assign(settings, Breakpoints.match(points));\n  /**\n   * Update glide with settings of matched brekpoint:\n   * - window resize to update slider\n   */\n\n  Binder.on('resize', window, throttle(function () {\n    Glide.settings = mergeOptions(settings, Breakpoints.match(points));\n  }, Glide.settings.throttle));\n  /**\n   * Resort and update default settings:\n   * - on reinit via API, so breakpoint matching will be performed with options\n   */\n\n  Events.on('update', function () {\n    points = sortBreakpoints(points);\n    defaults = Object.assign({}, settings);\n  });\n  /**\n   * Unbind resize listener:\n   * - on destroying, to bring markup to its initial state\n   */\n\n  Events.on('destroy', function () {\n    Binder.off('resize', window);\n  });\n  return Breakpoints;\n}\n\nvar COMPONENTS = {\n  // Required\n  Html: Html,\n  Translate: Translate,\n  Transition: Transition,\n  Direction: Direction,\n  Peek: Peek,\n  Sizes: Sizes,\n  Gaps: Gaps,\n  Move: Move,\n  Clones: Clones,\n  Resize: Resize,\n  Build: Build,\n  Run: Run,\n  // Optional\n  Swipe: Swipe,\n  Images: Images,\n  Anchors: Anchors,\n  Controls: Controls,\n  Keyboard: Keyboard,\n  Autoplay: Autoplay,\n  Breakpoints: Breakpoints\n};\n\nvar Glide = /*#__PURE__*/function (_Core) {\n  _inherits(Glide, _Core);\n\n  var _super = _createSuper(Glide);\n\n  function Glide() {\n    _classCallCheck(this, Glide);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Glide, [{\n    key: \"mount\",\n    value: function mount() {\n      var extensions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return _get(_getPrototypeOf(Glide.prototype), \"mount\", this).call(this, Object.assign({}, COMPONENTS, extensions));\n    }\n  }]);\n\n  return Glide;\n}(Glide$1);\n\nexport { Glide as default };\n"],
  "mappings": "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",
  "names": ["obj", "_getPrototypeOf", "o", "_setPrototypeOf", "p", "_get", "defaults", "EventsBus", "Glide", "Run", "mount", "later", "throttled", "Gaps", "Html", "Peek", "Move", "Sizes", "Build", "Clones", "append", "EventsBinder", "Resize", "Direction", "Translate", "Transition", "Swipe", "Images", "Anchors", "Controls", "Keyboard", "Autoplay", "Breakpoints", "points"]
}
